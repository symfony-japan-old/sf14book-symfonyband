<?php

/**
 * BasePage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property clob $body
 * @property string $category
 * @property string $author
 * 
 * @method string getTitle()    Returns the current record's "title" value
 * @method clob   getBody()     Returns the current record's "body" value
 * @method string getCategory() Returns the current record's "category" value
 * @method string getAuthor()   Returns the current record's "author" value
 * @method Page   setTitle()    Sets the current record's "title" value
 * @method Page   setBody()     Sets the current record's "body" value
 * @method Page   setCategory() Sets the current record's "category" value
 * @method Page   setAuthor()   Sets the current record's "author" value
 * 
 * @package    symfonyband
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BasePage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('page');
        $this->hasColumn('title', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 100,
             ));
        $this->hasColumn('body', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             'default' => '',
             ));
        $this->hasColumn('category', 'string', 32, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 32,
             ));
        $this->hasColumn('author', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 30,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable();
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}